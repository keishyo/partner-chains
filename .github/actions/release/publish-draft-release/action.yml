name: "Publish Release"
description: "Publishes a GitHub release from draft status."
inputs:
  tag:
    description: "Tag for the release"
    required: true

outputs:
  release_exists:
    description: "Whether the release exists"
    value: ${{ steps.check_release.outputs.release_exists }}
  release_id:
    description: "ID of the release"
    value: ${{ steps.check_release.outputs.release_id }}

runs:
  using: "composite"
  steps:
    - name: Check if release exists
      id: check_release
      run: |
        set -e
        tag="${{ inputs.tag }}"
        release_response=$(curl -s -H "Authorization: token ${{ env.GITHUB_TOKEN }} \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag")

        if echo "$release_response" | grep -q '"message": "Not Found"'; then
          echo "release_exists=false" >> "$GITHUB_OUTPUT"
          echo "release_id=" >> "$GITHUB_OUTPUT"
        else
          echo "release_exists=true" >> "$GITHUB_OUTPUT"
          release_id=$(echo "$release_response" | jq -r .id)
          echo "release_id=$release_id" >> "$GITHUB_OUTPUT"
        fi
      shell: bash

    - name: Publish release
      if: ${{ steps.check_release.outputs.release_exists == 'true' }}
      run: |
        set -e
        release_id="${{ steps.check_release.outputs.release_id }}"
        response=$(curl -s -X PATCH -H "Authorization: token ${{ env.GITHUB_TOKEN }}" \
          -d '{"draft": false}' \
          "https://api.github.com/repos/${{ github.repository }}/releases/$release_id")
        echo "Response: $response"
        if echo "$response" | jq -e '.id' >/dev/null; then
          echo "Release updated successfully"
        else
          echo "Failed to update release"
          exit 1
        fi
      shell: bash